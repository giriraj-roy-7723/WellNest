{
  "address": "0xD478E3F4d362BFe3B8DDC3Ae6c36c64262Fe87Dd",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "recordHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        }
      ],
      "name": "RecordStored",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_patient",
          "type": "string"
        }
      ],
      "name": "getAllPatientRecords",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "dataHash",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "patientId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "doctor",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct PatientRecords.PatientRecord[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_dataHash",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_patient",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_doctor",
          "type": "string"
        }
      ],
      "name": "storePatientRecord",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x584e70768be161290a52daa7e874acdeb84f8b1554cfabb84a233708702e6e7f",
  "receipt": {
    "to": null,
    "from": "0xB35203240DEC93E961793A8e5b21Ef10D0022F06",
    "contractAddress": "0xD478E3F4d362BFe3B8DDC3Ae6c36c64262Fe87Dd",
    "transactionIndex": 170,
    "gasUsed": "768390",
    "logsBloom": "0x
    "blockHash": "0x3638ad6d0bd2ebde17c13dac5d1eb12755091e21116a26209b92efc564c4a4cd",
    "transactionHash": "0x584e70768be161290a52daa7e874acdeb84f8b1554cfabb84a233708702e6e7f",
    "logs": [],
    "blockNumber": 9023997,
    "cumulativeGasUsed": "22843780",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "056e27b7fe378d5899ea932231af608d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"recordHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"RecordStored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_patient\",\"type\":\"string\"}],\"name\":\"getAllPatientRecords\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"doctor\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct PatientRecords.PatientRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_patient\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_doctor\",\"type\":\"string\"}],\"name\":\"storePatientRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PatientRecords.sol\":\"PatientRecords\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PatientRecords.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n// Contract 1: Private Patient Records (Limited Access)\\ncontract PatientRecords {\\n    struct PatientRecord {\\n        bytes32 dataHash;\\n        string patientId;\\n        string doctor; // Who treated the patient\\n        uint256 timestamp;\\n    }\\n\\n    // patientId => ordered list of data hashes (append-only)\\n    mapping(bytes32 => PatientRecord) private records;\\n    mapping(string => bytes32[]) private _recordsOfPatient;\\n\\n    event RecordStored(bytes32 indexed recordHash, address indexed doctor);\\n\\n    function storePatientRecord(\\n        bytes32 _dataHash,\\n        string memory _patient,\\n        string memory _doctor\\n    ) external {\\n        require(records[_dataHash].timestamp == 0, \\\"Record already exists\\\");//prevents duplication\\n        _recordsOfPatient[_patient].push(_dataHash);\\n        records[_dataHash] = PatientRecord({\\n            dataHash: _dataHash,\\n            patientId: _patient,\\n            doctor: _doctor,\\n            timestamp: block.timestamp\\n        });\\n        emit RecordStored(_dataHash, msg.sender);\\n    }\\n\\n    function getAllPatientRecords(\\n        string memory _patient\\n    ) external view returns (PatientRecord[] memory) {\\n        bytes32[] memory hashes = _recordsOfPatient[_patient];\\n        PatientRecord[] memory allRecords = new PatientRecord[](hashes.length);\\n\\n        for (uint256 i = 0; i < hashes.length; i++) {\\n            allRecords[i] = records[hashes[i]];\\n        }\\n\\n        return allRecords;\\n    }\\n}\\n\",\"keccak256\":\"0xd047b65369866171a51637b2733daa6e42bb0c525182de6ea621368ea7f82bdd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50610cf78061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063cec2b9b81461003b578063eac9afa414610057575b600080fd5b6100556004803603810190610050919061061b565b610087565b005b610071600480360381019061006c91906106a6565b6101e3565b60405161007e91906108c2565b60405180910390f35b600080600085815260200190815260200160002060030154146100df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d690610941565b60405180910390fd5b6001826040516100ef919061099d565b90815260200160405180910390208390806001815401808255809150506001900390600052602060002001600090919091909150556040518060800160405280848152602001838152602001828152602001428152506000808581526020019081526020016000206000820151816000015560208201518160010190816101769190610bc0565b50604082015181600201908161018c9190610bc0565b50606082015181600301559050503373ffffffffffffffffffffffffffffffffffffffff16837f9ab34480d94fab9083fb6dc4436216baa0bd47784e8c6f8813840893e97b2ac260405160405180910390a3505050565b606060006001836040516101f7919061099d565b908152602001604051809103902080548060200260200160405190810160405280929190818152602001828054801561024f57602002820191906000526020600020905b81548152602001906001019080831161023b575b505050505090506000815167ffffffffffffffff811115610273576102726104f0565b5b6040519080825280602002602001820160405280156102ac57816020015b610299610460565b8152602001906001900390816102915790505b50905060005b8251811015610455576000808483815181106102d1576102d0610c92565b5b602002602001015181526020019081526020016000206040518060800160405290816000820154815260200160018201805461030c906109e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610338906109e3565b80156103855780601f1061035a57610100808354040283529160200191610385565b820191906000526020600020905b81548152906001019060200180831161036857829003601f168201915b5050505050815260200160028201805461039e906109e3565b80601f01602080910402602001604051908101604052809291908181526020018280546103ca906109e3565b80156104175780601f106103ec57610100808354040283529160200191610417565b820191906000526020600020905b8154815290600101906020018083116103fa57829003601f168201915b5050505050815260200160038201548152505082828151811061043d5761043c610c92565b5b602002602001018190525080806001019150506102b2565b508092505050919050565b6040518060800160405280600080191681526020016060815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6104b28161049f565b81146104bd57600080fd5b50565b6000813590506104cf816104a9565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610528826104df565b810181811067ffffffffffffffff82111715610547576105466104f0565b5b80604052505050565b600061055a61048b565b9050610566828261051f565b919050565b600067ffffffffffffffff821115610586576105856104f0565b5b61058f826104df565b9050602081019050919050565b82818337600083830152505050565b60006105be6105b98461056b565b610550565b9050828152602081018484840111156105da576105d96104da565b5b6105e584828561059c565b509392505050565b600082601f830112610602576106016104d5565b5b81356106128482602086016105ab565b91505092915050565b60008060006060848603121561063457610633610495565b5b6000610642868287016104c0565b935050602084013567ffffffffffffffff8111156106635761066261049a565b5b61066f868287016105ed565b925050604084013567ffffffffffffffff8111156106905761068f61049a565b5b61069c868287016105ed565b9150509250925092565b6000602082840312156106bc576106bb610495565b5b600082013567ffffffffffffffff8111156106da576106d961049a565b5b6106e6848285016105ed565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107248161049f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610764578082015181840152602081019050610749565b60008484015250505050565b600061077b8261072a565b6107858185610735565b9350610795818560208601610746565b61079e816104df565b840191505092915050565b6000819050919050565b6107bc816107a9565b82525050565b60006080830160008301516107da600086018261071b565b50602083015184820360208601526107f28282610770565b9150506040830151848203604086015261080c8282610770565b915050606083015161082160608601826107b3565b508091505092915050565b600061083883836107c2565b905092915050565b6000602082019050919050565b6000610858826106ef565b61086281856106fa565b9350836020820285016108748561070b565b8060005b858110156108b05784840389528151610891858261082c565b945061089c83610840565b925060208a01995050600181019050610878565b50829750879550505050505092915050565b600060208201905081810360008301526108dc818461084d565b905092915050565b600082825260208201905092915050565b7f5265636f726420616c7265616479206578697374730000000000000000000000600082015250565b600061092b6015836108e4565b9150610936826108f5565b602082019050919050565b6000602082019050818103600083015261095a8161091e565b9050919050565b600081905092915050565b60006109778261072a565b6109818185610961565b9350610991818560208601610746565b80840191505092915050565b60006109a9828461096c565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109fb57607f821691505b602082108103610a0e57610a0d6109b4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610a767fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a39565b610a808683610a39565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610abd610ab8610ab3846107a9565b610a98565b6107a9565b9050919050565b6000819050919050565b610ad783610aa2565b610aeb610ae382610ac4565b848454610a46565b825550505050565b600090565b610b00610af3565b610b0b818484610ace565b505050565b5b81811015610b2f57610b24600082610af8565b600181019050610b11565b5050565b601f821115610b7457610b4581610a14565b610b4e84610a29565b81016020851015610b5d578190505b610b71610b6985610a29565b830182610b10565b50505b505050565b600082821c905092915050565b6000610b9760001984600802610b79565b1980831691505092915050565b6000610bb08383610b86565b9150826002028217905092915050565b610bc98261072a565b67ffffffffffffffff811115610be257610be16104f0565b5b610bec82546109e3565b610bf7828285610b33565b600060209050601f831160018114610c2a5760008415610c18578287015190505b610c228582610ba4565b865550610c8a565b601f198416610c3886610a14565b60005b82811015610c6057848901518255600182019150602085019450602081019050610c3b565b86831015610c7d5784890151610c79601f891682610b86565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220eab40b4e0174b590d3420323bfb103855a6398b572148b1ff78477c7a7d08b1964736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063cec2b9b81461003b578063eac9afa414610057575b600080fd5b6100556004803603810190610050919061061b565b610087565b005b610071600480360381019061006c91906106a6565b6101e3565b60405161007e91906108c2565b60405180910390f35b600080600085815260200190815260200160002060030154146100df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d690610941565b60405180910390fd5b6001826040516100ef919061099d565b90815260200160405180910390208390806001815401808255809150506001900390600052602060002001600090919091909150556040518060800160405280848152602001838152602001828152602001428152506000808581526020019081526020016000206000820151816000015560208201518160010190816101769190610bc0565b50604082015181600201908161018c9190610bc0565b50606082015181600301559050503373ffffffffffffffffffffffffffffffffffffffff16837f9ab34480d94fab9083fb6dc4436216baa0bd47784e8c6f8813840893e97b2ac260405160405180910390a3505050565b606060006001836040516101f7919061099d565b908152602001604051809103902080548060200260200160405190810160405280929190818152602001828054801561024f57602002820191906000526020600020905b81548152602001906001019080831161023b575b505050505090506000815167ffffffffffffffff811115610273576102726104f0565b5b6040519080825280602002602001820160405280156102ac57816020015b610299610460565b8152602001906001900390816102915790505b50905060005b8251811015610455576000808483815181106102d1576102d0610c92565b5b602002602001015181526020019081526020016000206040518060800160405290816000820154815260200160018201805461030c906109e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610338906109e3565b80156103855780601f1061035a57610100808354040283529160200191610385565b820191906000526020600020905b81548152906001019060200180831161036857829003601f168201915b5050505050815260200160028201805461039e906109e3565b80601f01602080910402602001604051908101604052809291908181526020018280546103ca906109e3565b80156104175780601f106103ec57610100808354040283529160200191610417565b820191906000526020600020905b8154815290600101906020018083116103fa57829003601f168201915b5050505050815260200160038201548152505082828151811061043d5761043c610c92565b5b602002602001018190525080806001019150506102b2565b508092505050919050565b6040518060800160405280600080191681526020016060815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6104b28161049f565b81146104bd57600080fd5b50565b6000813590506104cf816104a9565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610528826104df565b810181811067ffffffffffffffff82111715610547576105466104f0565b5b80604052505050565b600061055a61048b565b9050610566828261051f565b919050565b600067ffffffffffffffff821115610586576105856104f0565b5b61058f826104df565b9050602081019050919050565b82818337600083830152505050565b60006105be6105b98461056b565b610550565b9050828152602081018484840111156105da576105d96104da565b5b6105e584828561059c565b509392505050565b600082601f830112610602576106016104d5565b5b81356106128482602086016105ab565b91505092915050565b60008060006060848603121561063457610633610495565b5b6000610642868287016104c0565b935050602084013567ffffffffffffffff8111156106635761066261049a565b5b61066f868287016105ed565b925050604084013567ffffffffffffffff8111156106905761068f61049a565b5b61069c868287016105ed565b9150509250925092565b6000602082840312156106bc576106bb610495565b5b600082013567ffffffffffffffff8111156106da576106d961049a565b5b6106e6848285016105ed565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107248161049f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610764578082015181840152602081019050610749565b60008484015250505050565b600061077b8261072a565b6107858185610735565b9350610795818560208601610746565b61079e816104df565b840191505092915050565b6000819050919050565b6107bc816107a9565b82525050565b60006080830160008301516107da600086018261071b565b50602083015184820360208601526107f28282610770565b9150506040830151848203604086015261080c8282610770565b915050606083015161082160608601826107b3565b508091505092915050565b600061083883836107c2565b905092915050565b6000602082019050919050565b6000610858826106ef565b61086281856106fa565b9350836020820285016108748561070b565b8060005b858110156108b05784840389528151610891858261082c565b945061089c83610840565b925060208a01995050600181019050610878565b50829750879550505050505092915050565b600060208201905081810360008301526108dc818461084d565b905092915050565b600082825260208201905092915050565b7f5265636f726420616c7265616479206578697374730000000000000000000000600082015250565b600061092b6015836108e4565b9150610936826108f5565b602082019050919050565b6000602082019050818103600083015261095a8161091e565b9050919050565b600081905092915050565b60006109778261072a565b6109818185610961565b9350610991818560208601610746565b80840191505092915050565b60006109a9828461096c565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109fb57607f821691505b602082108103610a0e57610a0d6109b4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610a767fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a39565b610a808683610a39565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610abd610ab8610ab3846107a9565b610a98565b6107a9565b9050919050565b6000819050919050565b610ad783610aa2565b610aeb610ae382610ac4565b848454610a46565b825550505050565b600090565b610b00610af3565b610b0b818484610ace565b505050565b5b81811015610b2f57610b24600082610af8565b600181019050610b11565b5050565b601f821115610b7457610b4581610a14565b610b4e84610a29565b81016020851015610b5d578190505b610b71610b6985610a29565b830182610b10565b50505b505050565b600082821c905092915050565b6000610b9760001984600802610b79565b1980831691505092915050565b6000610bb08383610b86565b9150826002028217905092915050565b610bc98261072a565b67ffffffffffffffff811115610be257610be16104f0565b5b610bec82546109e3565b610bf7828285610b33565b600060209050601f831160018114610c2a5760008415610c18578287015190505b610c228582610ba4565b865550610c8a565b601f198416610c3886610a14565b60005b82811015610c6057848901518255600182019150602085019450602081019050610c3b565b86831015610c7d5784890151610c79601f891682610b86565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220eab40b4e0174b590d3420323bfb103855a6398b572148b1ff78477c7a7d08b1964736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/PatientRecords.sol:PatientRecords",
        "label": "records",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(PatientRecord)10_storage)"
      },
      {
        "astId": 20,
        "contract": "contracts/PatientRecords.sol:PatientRecords",
        "label": "_recordsOfPatient",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_bytes32)dyn_storage)"
      }
    ],
    "types": {
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_struct(PatientRecord)10_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct PatientRecords.PatientRecord)",
        "numberOfBytes": "32",
        "value": "t_struct(PatientRecord)10_storage"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(PatientRecord)10_storage": {
        "encoding": "inplace",
        "label": "struct PatientRecords.PatientRecord",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/PatientRecords.sol:PatientRecords",
            "label": "dataHash",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 5,
            "contract": "contracts/PatientRecords.sol:PatientRecords",
            "label": "patientId",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/PatientRecords.sol:PatientRecords",
            "label": "doctor",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/PatientRecords.sol:PatientRecords",
            "label": "timestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}